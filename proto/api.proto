syntax = "proto3";

option go_package = "proto";

message PingRequest {
}

message PingResponse {
    string message = 1;
}

message Story {
    string id = 1;
    string title = 2;
    string body = 3;
    int64 views = 4;
    int64 upVotes = 5;
    int64 downVotes = 6;
    int64 createdAtUnix = 7;
    int64 updatedAtUnix = 8;
}

message AddStoryRequest {
    Story story = 1;
}

message AddStoryResponse {
    bool success = 1;
}

message UpdateStoryRequest {
    Story story = 1;
}

message UpdateStoryResponse {
    bool success = 1;
}

message GetStoryRequest {
    string storyID = 1;
}

message GetStoryResponse {
    Story story = 1;
}

message DeleteStoryRequest {
    string storyID = 1;
}

message DeleteStoryResponse {
    bool success = 1;
}

message SearchStoriesRequest {
    string query = 1;
}

message SearchStoriesResponse {
    repeated Story stories = 1;
}

message MostViewedStoriesRequest {
    int64 offset = 1;
    int64 limit = 2;
}

message MostViewedStoriesResponse {
    repeated Story stories = 1;
}

message TopRatedStoriesRequest {
    int64 offset = 1;
    int64 limit = 2;
}

message TopRatedStoriesResponse {
    repeated Story stories = 1;
}

message HealthCheckRequest {
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
        UNKNOWN = 0;
        SERVING = 1;
        NOT_SERVING = 2;
        SERVICE_UNKNOWN = 3;
    }
    ServingStatus status = 1;
}

service Health {
    rpc Check (HealthCheckRequest) returns (HealthCheckResponse);
    rpc Watch (HealthCheckRequest) returns (HealthCheckResponse);
}

service StoriesApi {
    rpc Ping (PingRequest) returns (PingResponse);
    rpc AddStory (AddStoryRequest) returns (AddStoryResponse);
    rpc GetStory (GetStoryRequest) returns (GetStoryResponse);
    rpc UpdateStory (UpdateStoryRequest) returns (UpdateStoryResponse);
    rpc SearchStories (SearchStoriesRequest) returns (SearchStoriesResponse);
    rpc GetMostViewedStories (MostViewedStoriesRequest) returns (MostViewedStoriesResponse);
    rpc GetTopRatedStories (TopRatedStoriesRequest) returns (TopRatedStoriesResponse);
    rpc DeleteStory (DeleteStoryRequest) returns (DeleteStoryResponse);
}